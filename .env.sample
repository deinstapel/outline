# Copy this file to .env, remove this comment and change the keys. For development
# with docker this should mostly work out of the box other than setting the Slack
# keys (for auth) and the SECRET_KEY.
#
# Please use `openssl rand -hex 32` to create SECRET_KEY
SECRET_KEY=generate_a_new_key

DATABASE_URL=postgres://user:pass@postgres:5432/outline
DATABASE_URL_TEST=postgres://user:pass@postgres:5432/outline-test
REDIS_URL=redis://redis:6379

URL=http://localhost:3000
PORT=3000

DEPLOYMENT=self
ENABLE_UPDATES=true
SUBDOMAINS_ENABLED=false
WEBSOCKETS_ENABLED=true
DEBUG=cache,presenters,events

#Enable LDAP Sigin?
LDAP_ENABLED=true

# Ldap teamname
# default = "LDAP"
LDAP_TEAM="LDAP"

# The header with the username when using a reverse proxy forwarding the ldap user
LDAP_REVERSE_PROXY_HEADER=

# The url of the ldap server
LDAP_URL=ldap://127.0.0.1

# The base dn for every entries
LDAP_BASE_DN="dc=example,dc=com"

# An additional dn to define the scope to all users empty for none
LDAP_ADDITIONAL_USERS_DN="ou=users"

# The users filter used to find the user DN
# {0} is a matcher replaced by username.
# 'cn={0}' by default.
LDAP_USERS_FILTER="cn={0}"

# An additional dn to define the scope of groups
LDAP_ADDITIONAL_GROUPS_DN="ou=groups"

# The groups filter used for retrieving groups of a given user.
# {0} is a matcher replaced by dn of user.
# "(&(member={0})(objectclass=groupOfNames))" by default
LDAP_GROUPS_FILTER="(&(member={0})(objectclass=groupOfNames))"

# The attribute holding the name of the group
LDAP_GROUP_NAME_ATTR=cn

# The attribute holding the mail address of the user
LDAP_USER_MAIL_ATTR=mail

# The username and password of the admin user.
LDAP_ADMIN_USER="cn=admin,dc=example,dc=com"
LDAP_ADMIN_PASSWORD="HidingInPlainSight"

#Which group does the user need to be in to be admin?
LDAP_ADMIN_GROUP="admins"

#Which group does the user need to be in to be allowed access to Outline?
#Empty for allowing all users
LDAP_ACCESS_GROUP=


# Third party signin credentials (at least one is required)
SLACK_KEY=get_a_key_from_slack
SLACK_SECRET=get_the_secret_of_above_key

GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
# Comma separated list of domains to be allowed (optional)
# If not set, all Google apps domains are allowed by default
GOOGLE_ALLOWED_DOMAINS=

# Third party credentials (optional)
SLACK_VERIFICATION_TOKEN=PLxk6OlXXXXXVj3YYYY
SLACK_APP_ID=A0XXXXXXX
SLACK_MESSAGE_ACTIONS=true
GOOGLE_ANALYTICS_ID=
BUGSNAG_KEY=
GITHUB_ACCESS_TOKEN=

# AWS credentials (optional in dev)
AWS_ACCESS_KEY_ID=get_a_key_from_aws
AWS_SECRET_ACCESS_KEY=get_the_secret_of_above_key
AWS_REGION=xx-xxxx-x
AWS_S3_UPLOAD_BUCKET_URL=http://s3:4569
AWS_S3_UPLOAD_BUCKET_NAME=bucket_name_here
AWS_S3_UPLOAD_MAX_SIZE=26214400

# Emails configuration (optional)
SMTP_HOST=
SMTP_PORT=
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=
SMTP_REPLY_EMAIL=
